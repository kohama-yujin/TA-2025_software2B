Messageクラスでコピーコンストラクタが未定義であることが原因で、各インスタンスのメンバ変数が同じアドレスを持ち、同じメモリを2回開放してしまっているため。

以下、詳細 
Messageクラスでコピーコンストラクタが未定義であることから、デフォルトコピーコンストラクタが呼ばれ、メンバ変数のアドレスの値がそのままコピーされる。

printf("obj1: %p\n", obj1.getMessage());
printf("obj2: %p\n", obj2.getMessage());
の結果が
obj1: 000002660e3616b0
obj2: 000002660e3616b0
であることからも、各インスタンスのメンバ変数のアドレスは同じであることがわかる。

その結果、プログラム終了時に各インスタンスのデストラクタが呼ばれ、同じメモリを2回開放してしまう。
一見、if (message != nullptr)で2回目のdelete[]は防げるように思うが、messageは解放されたアドレスを保持しており、nullptrではない。